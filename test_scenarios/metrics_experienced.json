{
    "user_progress": {
        "categories": {
            "Arrays and Hashing": {
                "total_attempted": 10,
                "correct_solutions": 8
            },
            "Two Pointers": {
                "total_attempted": 8,
                "correct_solutions": 6
            },
            "Stack": {
                "total_attempted": 5,
                "correct_solutions": 3
            },
            "Binary Search": {
                "total_attempted": 4,
                "correct_solutions": 2
            },
            "Sliding Window": {
                "total_attempted": 0,
                "correct_solutions": 0
            },
            "Linked List": {
                "total_attempted": 0,
                "correct_solutions": 0
            },
            "Trees": {
                "total_attempted": 0,
                "correct_solutions": 0
            },
            "Tries": {
                "total_attempted": 0,
                "correct_solutions": 0
            },
            "Heap/Priority Queue": {
                "total_attempted": 0,
                "correct_solutions": 0
            },
            "Backtracking": {
                "total_attempted": 0,
                "correct_solutions": 0
            },
            "Graphs": {
                "total_attempted": 0,
                "correct_solutions": 0
            },
            "Dynamic Programming 1D": {
                "total_attempted": 0,
                "correct_solutions": 0
            },
            "Dynamic Programming 2D": {
                "total_attempted": 0,
                "correct_solutions": 0
            },
            "Greedy": {
                "total_attempted": 0,
                "correct_solutions": 0
            }
        },
        "problems": {
            "Two Sum": {
                "attempts": 1,
                "solved": true,
                "solutions": [
                    {
                        "file_path": "solutions/Two_Sum.py",
                        "score": 0.9,
                        "feedback": "Test feedback"
                    }
                ]
            },
            "Valid Anagram": {
                "attempts": 1,
                "solved": true,
                "solutions": [
                    {
                        "file_path": "solutions/Valid_Anagram.py",
                        "score": 0.85,
                        "feedback": "Test feedback"
                    }
                ]
            },
            "Contains Duplicate": {
                "attempts": 1,
                "solved": true,
                "solutions": [
                    {
                        "file_path": "solutions/Contains_Duplicate.py",
                        "score": 0.95,
                        "feedback": "Test feedback"
                    }
                ]
            },
            "Valid Parentheses": {
                "attempts": 2,
                "solved": false,
                "solutions": [
                    {
                        "file_path": "solutions/Valid_Parentheses.py",
                        "score": 0.4,
                        "feedback": "Test feedback"
                    }
                ]
            },
            "Binary Search": {
                "attempts": 3,
                "solved": true,
                "solutions": [
                    {
                        "file_path": "solutions/Binary_Search.py",
                        "score": 0.7,
                        "feedback": "Test feedback"
                    }
                ]
            }
        }
    }
}